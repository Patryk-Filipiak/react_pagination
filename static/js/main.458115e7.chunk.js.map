{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","className","href","onClick","e","preventDefault","Number","Array","fill","undefined","map","key","pageIndex","items","from","to","numbers","n","push","getNumbers","App","useState","setItemsPerPage","setCurrentPage","startIndex","endIndex","length","id","onChange","target","value","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"8KAOaA,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAErC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAS,oBAA+B,IAAhBL,EAAoB,WAAa,IAD3D,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAAS,SAACC,GACRA,EAAEC,iBACET,EAAc,EAAI,GAItBC,EAAaS,OAAOV,EAAc,KAXtC,oBAiBD,IAAIW,MAAMT,GAAYU,UAAKC,GACzBC,KAAI,SAACC,EAAKC,GAAN,OACH,oBAAIX,UAAS,oBAAgBW,IAAchB,EAAc,SAAW,IAApE,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAI,WAAMU,EAAY,GAEtBT,QAAS,SAACC,GACRA,EAAEC,iBACFR,EAAaS,OAAOM,KAPxB,SAUGA,EAAY,GANRD,QAUb,oBAAIV,UAAS,oBAAeL,EAAc,IAAME,EAAa,WAAa,IAA1E,SACE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAAeN,EAAc,IAAME,EACnCK,QAAS,SAACC,GACRA,EAAEC,iBACET,EAAc,IAAME,GAIxBD,EAAaS,OAAOV,EAAc,KAXtC,wBCjDFiB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAmCC,mBAAiB,GAApD,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAOzB,EAAP,KAAoB2B,EAApB,KAEMC,EAAa7B,EAAUC,EAAc,EACrC6B,EAAW9B,EAAUC,EAAcD,EAGzC,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EAAc,EADzB,mBACqC4B,EADrC,cACqDC,EAAWZ,EAAMa,OAASb,EAAMa,OAASD,EAD9F,eAC6GZ,EAAMa,OADnH,OAIA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAAU,SAACxB,GACTmB,EAAe,GACfD,EAAgBhB,OAAOF,EAAEyB,OAAOC,SAElCA,MAAOnC,EART,SAZQ,CAAC,EAAG,EAAG,GAAI,IAsBRe,KAAI,SAAAqB,GAAM,OAAI,wBAAQD,MAAOC,EAAf,SAAwBA,WAInD,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOmB,EAAMa,OACb/B,QAASA,EACTC,YAAaA,EACbC,aAAc0B,IAEhB,6BACGV,EAAMoB,MAAMT,EAAa,EAAGC,GAC1Bf,KAAI,SAAAwB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEnD/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.458115e7.chunk.js","sourcesContent":["type Props = {\n  total: number;\n  perPage: number;\n  currentPage:number;\n  onPageChange:(page:number) => void;\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={`page-item ${currentPage === 0 ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 0}\n          onClick={(e) => {\n            e.preventDefault();\n            if (currentPage - 1 < 0) {\n              return;\n            }\n\n            onPageChange(Number(currentPage - 1));\n          }}\n        >\n          «\n        </a>\n      </li>\n      {new Array(pagesCount).fill(undefined)\n        .map((key, pageIndex) => (\n          <li className={`page-item ${(pageIndex === currentPage ? 'active' : '')}`}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageIndex + 1}`}\n              key={key}\n              onClick={(e) => {\n                e.preventDefault();\n                onPageChange(Number(pageIndex));\n              }}\n            >\n              {pageIndex + 1}\n            </a>\n          </li>\n        ))}\n      <li className={`page-item ${currentPage + 1 === pagesCount ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage + 1 === pagesCount}\n          onClick={(e) => {\n            e.preventDefault();\n            if (currentPage + 1 === pagesCount) {\n              return;\n            }\n\n            onPageChange(Number(currentPage + 1));\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setItemsPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(0);\n\n  const startIndex = perPage * currentPage + 1;\n  const endIndex = perPage * currentPage + perPage;\n  const options = [3, 5, 10, 20];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage + 1} (items ${startIndex} - ${endIndex > items.length ? items.length : endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setCurrentPage(0);\n              setItemsPerPage(Number(e.target.value));\n            }}\n            value={perPage}\n          >\n            {options.map(option => <option value={option}>{option}</option>)}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {items.slice(startIndex - 1, endIndex)\n          .map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}